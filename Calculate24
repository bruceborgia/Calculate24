#include<iostream>
#include<cmath>
using namespace std;

#define zero 1e-6//10^-6 

double a[5];

bool IsZero(double a)
{
	return fabs(a)<=zero;//fabs()计算浮点数的绝对值 
}
int count=0; 
bool Calculate24(double a[],int n)
{
	count++;
	//cout<<"调用c24第"<<count<<"\n"; 
	if(n==1)//边界条件 
	{
		if(IsZero(a[0]-24))
		{
			return true;
		}
	}
	
	double b[5]; 
	
	for(int i = 0;i < n-1; ++i)
	{
		for(int j = i+1;j < n; ++j) 
		{ //枚举两个数的组合 
			//cout<<"jisuaning\n";
			int m = 0; //还剩下m个数, m = n - 2; 
			
			for(int k = 0; k < n; ++k)
			{
				if( k != i && k!= j) 
				{
						b[m++] = a[k];//把其余数放入b 
						
				}
			} 
			
			b[m] = a[i]+a[j]; 
			if(Calculate24(b,m+1))
			{
				return true; 
			} 
			
			b[m] = a[i]-a[j]; 	
			if(Calculate24(b,m+1)) 
			{
				return true; 
			}
			
			
			b[m] = a[j]-a[i]; 
			if(Calculate24(b,m+1))
			{
				return true;
			} 
			
			b[m] = a[i]*a[j]; 
			if(Calculate24(b,m+1)) 
			{
				return true;
			}
			 
			if( !IsZero(a[j])) //判断分母不为0 
			{ 
				b[m] = a[i]/a[j]; 
				if(Calculate24(b,m+1)) 
				{
					return true;
				}
			} 
			if( !IsZero(a[i])) 
			{ 
				b[m] = a[j]/a[i]; 
				if(Calculate24(b,m+1))
				{
					return true;
				} 
		 	}
		} 
	}
return false;

}

int main()
{
	int n;
	while(true) 
	{ 
		for(int i = 0;i < 4; i++)
		{
			cin >> a[i];
		}
		if( IsZero(a[0]))
		{
			break;
		}
		if( Calculate24(a,4)) 
		{
			cout << "YES" << endl; 
		}
		else 
		{
			cout << "NO" << endl;
		} 
	} 
		  
	return 0;
}
